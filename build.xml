<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- 

Copyright (c) 2019 Infostretch Corporation

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

For any inquiry or need additional information, please contact support-qaf@infostretch.com

-->

<project basedir="." default="build" name="qaf-all" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="allprojects" value="qaf/build.xml, qaf-support/build.xml, qaf-support-ws/build.xml, qaf-support-galen/build.xml, qaf-support-flutter/build.xml, qaf-support-angular/build.xml, qaf-support-openapi/build.xml, qaf-cucumber/build.xml, qaf-support-elasticsearch/build.xml" />
	<property file="build.properties" />

	<macrodef name="iterate">
		<attribute name="target" />
		<sequential>
			<subant target="@{target}" inheritall="true">
				<filelist files="${allprojects}" dir="." />
			</subant>
		</sequential>
	</macrodef>
	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<echo message="git @{command}" />
			<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args />
			</exec>
		</sequential>
	</macrodef>
	<target name="build" depends="update">
		<subant failonerror="true" inheritall="true" >
			<filelist files="${allprojects}" dir="." />
			<target name="clean" />
			<target name="build" />
			<target name="test"/>
			<target name="publish" />
		</subant>
	</target>
	<target name="update">
		<git command="submodule" outproperty="git.cmd.output">
					<args>
						<arg value="foreach" />
						<arg value="--recursive" />
						<arg value="git" />
						<arg value="pull" />
						<arg value="--ff-only" />
						<arg value="origin" />
						<arg value="master" />
					</args>
				</git>
				<echo>Update:${basedir}: ${git.cmd.output}</echo>
	</target>
	<target name="test">
		<subant failonerror="true" inheritall="true" >
					<filelist files="qaf-cucumber/build.xml" dir="." />
					<target name="test" />
				</subant>
	</target>
	<target name="deploy-local">
		<iterate target="deploy-local" />
	</target>
	<target name="ivy-publish-share">
		<iterate target="publish-share" />
	</target>
	<target name="tag-release-all">
		<iterate target="getChangelog" />
		<iterate target="tag-release"/>
	</target>
	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="${basedir}" />
		<attribute name="outProperty" default="git.cmd.output" />

		<element name="args" optional="true" />
		<sequential>
			<echo message="git @{command}" />
			<exec executable="git" dir="@{dir}" outputproperty="@{outProperty}">
				<arg value="@{command}" />
				<args />
			</exec>
		</sequential>
	</macrodef>
	<macrodef name="hub">
		<attribute name="command" />
		<attribute name="dir" default="${basedir}" />
		<attribute name="outProperty" default="hub.output" />

		<element name="args" optional="true" />
		<sequential>
			<echo message="hub @{command}" />
			<exec executable="hub" dir="@{dir}" outputproperty="@{outProperty}">
				<arg value="@{command}" />
				<args />
			</exec>
		</sequential>
	</macrodef>
	<target name="getChangelog">
		<git command="describe" outproperty="hub.cmd.output">
			<args>
				<arg value="--tags" />
				<arg value="--abbrev=0" />
			</args>
		</git>
		<echo>Last Tag:${basedir}: ${git.cmd.output}</echo>
		<git command="log" outproperty="git.log.outputog">
			<args>
				<arg value="${git.cmd.output}..HEAD" />
				<arg value="--oneline" />
			</args>
		</git>
		<echo  file="release-notes.txt" append="false">${artifact.name} Release ${release.num}${line.separator}${line.separator}</echo>
		<echo file="release-notes.txt" append="true">
			${git.log.outputog}
		</echo>
	</target>
	<target name="tag-release" >
		<!-- hub release create - -copy -F release-notes.txt v2.3.0 -->
		<hub command="release"  outProperty="hub.output" >
					<args>
						<arg value="create"/>
						<arg value="${release.num}"/>
						<arg value="--prerelease"/>
						<arg value="--file"/>
						<arg value="qaf/out.txt"/>
					</args>
				</hub> 

		<echo>${hub.output}</echo>
	</target>
</project>
